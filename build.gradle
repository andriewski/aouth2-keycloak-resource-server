plugins {
  id 'org.springframework.boot' version '2.4.3'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
}

subprojects {
  if (isNotLibrary(project.name)) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
  }

  apply plugin: 'java'

  group = 'by.mark'
  version = '0.0.1-SNAPSHOT'
  sourceCompatibility = JavaVersion.VERSION_11

  configurations {
    compileOnly {
      extendsFrom annotationProcessor
    }
  }

  repositories {
    mavenCentral()
  }

  ext {
    set('springCloudVersion', "2020.0.2")
  }

  if (isNotLibrary(project.name)) {
    dependencies {
      implementation 'org.springframework.boot:spring-boot-starter-actuator'
      annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
      developmentOnly 'org.springframework.boot:spring-boot-devtools'

      compileOnly 'org.projectlombok:lombok'
      annotationProcessor 'org.projectlombok:lombok'

      testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootRun {
      //than using via 'gradlew -DinstanceId=bla resource-server:bootRun'
      systemProperties System.properties
    }
  }

  test {
    useJUnitPlatform()
  }
}

static boolean isNotLibrary(String projectName) {
  return projectName != 'my-remote-user-storage-provider'
}
